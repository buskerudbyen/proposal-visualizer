#! /usr/bin/env bash

set -e

PBF_DOWNLOAD_URL={{ pbf_download_url }}
PBF_FILE=norway.osm.pbf

OCEAN_SHAPEFILE_URL=https://osmdata.openstreetmap.de/download/water-polygons-split-4326.zip
OCEAN_SHAPEFILE_FOLDER=water-polygons-split-4326
OCEAN_SHAPEFILE_ZIP=${OCEAN_SHAPEFILE_FOLDER}.zip
OCEAN_SHAPEFILE_FINAL_FOLDER=coastline

if [ -f "$PBF_FILE" ]; then
  echo "$PBF_FILE exists. Downloading updates."
  pyosmium-up-to-date -v $PBF_FILE
else
  echo "$PBF_FILE does not exist."
  curl --fail --location -s "${PBF_DOWNLOAD_URL}" -o ${PBF_FILE}
fi

# every Monday we delete the coastline shapefiles and re-download them
if [[ $(date +"%u") -eq 1 ]]; then
  echo "Deleting coastline shapefiles"
  rm -rf ${OCEAN_SHAPEFILE_FINAL_FOLDER}
fi

if [ ! -d "${OCEAN_SHAPEFILE_FINAL_FOLDER}" ]; then
  echo "Downloading coastline shapefiles"
  curl --fail ${OCEAN_SHAPEFILE_URL} -o ${OCEAN_SHAPEFILE_ZIP}
  unzip ${OCEAN_SHAPEFILE_ZIP}
  mv ${OCEAN_SHAPEFILE_FOLDER} ${OCEAN_SHAPEFILE_FINAL_FOLDER}
  rm ${OCEAN_SHAPEFILE_ZIP}
fi

echo "Buildings tiles with tilemaker"
podman run \
  -v /var/tilemaker/:/srv:z \
  --name tilemaker-map \
  --rm \
  --cpu-shares 512 \
  docker.io/stadtnavi/tilemaker:2f617ccb1aa49ecda2685a4721361a479f0b6b81 \
  /srv/${PBF_FILE} \
  --output=/srv/tiles/bicycle/v1/  \
  --config=/srv/bicycle/config-openmaptiles.json \
  --process=/srv/bicycle/process-openmaptiles.lua \
  --store=/root/store \

send-to-matrix "tilemaker-map successful"

